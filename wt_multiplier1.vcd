$date
	Fri Dec  8 16:03:52 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_multiplier1 $end
$scope module d $end
$var wire 16 ! Bus [15:0] $end
$var wire 1 " clk $end
$var wire 1 # clrP $end
$var wire 16 $ data_in [15:0] $end
$var wire 1 % decB $end
$var wire 1 & ldA $end
$var wire 1 ' ldB $end
$var wire 1 ( ldP $end
$var wire 16 ) z [15:0] $end
$var wire 16 * y [15:0] $end
$var wire 16 + x [15:0] $end
$var wire 1 , eqz $end
$var wire 16 - Bout [15:0] $end
$var reg 16 . result [15:0] $end
$scope module A $end
$var wire 1 " clk $end
$var wire 16 / in [15:0] $end
$var wire 1 & ld $end
$var reg 16 0 out [15:0] $end
$upscope $end
$scope module AD $end
$var wire 16 1 in1 [15:0] $end
$var wire 16 2 out [15:0] $end
$var wire 16 3 in2 [15:0] $end
$upscope $end
$scope module CP $end
$var wire 1 , out $end
$var wire 16 4 in [15:0] $end
$upscope $end
$scope module DB $end
$var wire 1 " clk $end
$var wire 1 % en $end
$var wire 16 5 in [15:0] $end
$var wire 1 ' ld $end
$var reg 16 6 out [15:0] $end
$upscope $end
$scope module P $end
$var wire 1 " clk $end
$var wire 1 # clr $end
$var wire 16 7 in [15:0] $end
$var wire 1 ( ld $end
$var reg 16 8 out [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_multiplier1 $end
$scope module c $end
$var wire 1 " clk $end
$var wire 16 9 data_in [15:0] $end
$var wire 1 : start $end
$var wire 1 , eqz $end
$var reg 1 # clrP $end
$var reg 1 % decB $end
$var reg 1 ; done $end
$var reg 1 & ldA $end
$var reg 1 ' ldB $end
$var reg 1 ( ldP $end
$var reg 3 < state [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx <
x;
0:
b0 9
bx 8
bx 7
bx 6
b0 5
bx 4
bx 3
bx 2
bx 1
bx 0
b0 /
bx .
bx -
x,
bx +
bx *
bx )
x(
x'
x&
x%
b0 $
x#
0"
b0 !
$end
#3
1:
#10
0;
0&
0'
0(
0#
0%
b0 <
1"
#20
0"
#25
b11110 !
b11110 /
b11110 5
b11110 $
b11110 9
#30
1&
b1 <
1"
#40
0"
#50
1#
1'
0&
b11110 +
b11110 0
b11110 1
b10 <
1"
#60
0"
#65
b101 !
b101 /
b101 5
b101 $
b101 9
#70
0,
1%
1(
0'
0#
b11 <
b101 -
b101 4
b101 6
b11110 )
b11110 2
b11110 7
b0 *
b0 3
b0 8
1"
#80
0"
#90
b111100 )
b111100 2
b111100 7
b11110 *
b11110 3
b11110 8
b100 -
b100 4
b100 6
1"
#100
0"
#110
b11 -
b11 4
b11 6
b1011010 )
b1011010 2
b1011010 7
b111100 *
b111100 3
b111100 8
1"
#120
0"
#130
b1111000 )
b1111000 2
b1111000 7
b1011010 *
b1011010 3
b1011010 8
b10 -
b10 4
b10 6
1"
#140
0"
#150
b1 -
b1 4
b1 6
b10010110 )
b10010110 2
b10010110 7
b1111000 *
b1111000 3
b1111000 8
1"
#160
0"
#170
b10010110 .
1,
b10110100 )
b10110100 2
b10110100 7
b10010110 *
b10010110 3
b10010110 8
b0 -
b0 4
b0 6
1"
#180
0"
#190
1;
0(
0%
b100 <
b11010010 )
b11010010 2
b11010010 7
b10110100 *
b10110100 3
b10110100 8
1"
#200
0"
#210
1"
#220
0"
#230
1"
#240
0"
#250
1"
#260
0"
#270
1"
#280
0"
#290
1"
#300
0"
#310
1"
#320
0"
#330
1"
#340
0"
#350
1"
#360
0"
#370
1"
#380
0"
#390
1"
#400
0"
#410
1"
#420
0"
#430
1"
#440
0"
#450
1"
#460
0"
#470
1"
#480
0"
#490
1"
#500
0"
#510
1"
#520
0"
#530
1"
#540
0"
#550
1"
#560
0"
#565
